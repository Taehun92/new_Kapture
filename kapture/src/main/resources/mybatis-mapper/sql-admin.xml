<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.kapture.admin.mapper.AdminMapper">
	
 <!-- üìÖ ÏõîÎ≥Ñ Îß§Ï∂ú -->
    <select id="getMonthChartByYear" parameterType="hashmap" resultType="map">
        SELECT 
            NVL(SUM(DECODE(TO_CHAR(PAYMENT_DATE, 'MM'), '01', AMOUNT)), 0) AS "01Ïõî",
            NVL(SUM(DECODE(TO_CHAR(PAYMENT_DATE, 'MM'), '02', AMOUNT)), 0) AS "02Ïõî",
            NVL(SUM(DECODE(TO_CHAR(PAYMENT_DATE, 'MM'), '03', AMOUNT)), 0) AS "03Ïõî",
            NVL(SUM(DECODE(TO_CHAR(PAYMENT_DATE, 'MM'), '04', AMOUNT)), 0) AS "04Ïõî",
            NVL(SUM(DECODE(TO_CHAR(PAYMENT_DATE, 'MM'), '05', AMOUNT)), 0) AS "05Ïõî",
            NVL(SUM(DECODE(TO_CHAR(PAYMENT_DATE, 'MM'), '06', AMOUNT)), 0) AS "06Ïõî",
            NVL(SUM(DECODE(TO_CHAR(PAYMENT_DATE, 'MM'), '07', AMOUNT)), 0) AS "07Ïõî",
            NVL(SUM(DECODE(TO_CHAR(PAYMENT_DATE, 'MM'), '08', AMOUNT)), 0) AS "08Ïõî",
            NVL(SUM(DECODE(TO_CHAR(PAYMENT_DATE, 'MM'), '09', AMOUNT)), 0) AS "09Ïõî",
            NVL(SUM(DECODE(TO_CHAR(PAYMENT_DATE, 'MM'), '10', AMOUNT)), 0) AS "10Ïõî",
            NVL(SUM(DECODE(TO_CHAR(PAYMENT_DATE, 'MM'), '11', AMOUNT)), 0) AS "11Ïõî",
            NVL(SUM(DECODE(TO_CHAR(PAYMENT_DATE, 'MM'), '12', AMOUNT)), 0) AS "12Ïõî"
        FROM PAYMENTS
        WHERE TO_CHAR(PAYMENT_DATE, 'YYYY') = #{year}
    </select>

    <!--  ÏßÄÏó≠ + ÌÖåÎßàÎ≥Ñ  -->
    <select id="getThemeSalesByRegion" resultType="hashmap">
    SELECT 
        SI_NAME AS REGION,           <!-- ‚úÖ Ïù¥ ÎùºÏù∏ Ï∂îÍ∞Ä! -->
        THEME_NAME AS THEME, 
        COUNT(*) AS TOTAL
    FROM PAYMENTS p
    JOIN TOURS t ON p.TOUR_NO = t.TOUR_NO
    JOIN THEME th ON t.THEME_NO = th.THEME_NO
    JOIN REGION r ON t.SI_NO = r.SI_NO
    WHERE 1=1
        <if test="year != null and year != ''">
            AND TO_CHAR(PAYMENT_DATE, 'YYYY') = #{year}
        </if>
        <if test="region != null and region != ''">
            AND SI_NAME = #{region}
        </if>
    GROUP BY SI_NAME, THEME_NAME   <!-- ‚úÖ Í∑∏Î£πÌïëÎèÑ SI_NAME Ìè¨Ìï® -->
    ORDER BY TOTAL DESC
</select>
	
	<!-- Ïãú Ïù¥Î¶Ñ Ï°∞Ìöå -->
	<select id="getRegionList" resultType="string">
	    SELECT DISTINCT SI_NAME
	    FROM REGION
	    WHERE SI_NAME IS NOT NULL
	    ORDER BY SI_NAME
	</select>
    
    <!--ÎÖÑÎèÑ, ÏõîÎ°ú Ïùº Ï°∞Ìöå -->
    <select id="getDayChartByYearMonth" parameterType="map" resultType="map">
	    SELECT TO_CHAR(PAYMENT_DATE, 'DD') || 'Ïùº' AS DAY,
	           SUM(AMOUNT) AS TOTAL
	    FROM PAYMENTS
	    WHERE TO_CHAR(PAYMENT_DATE, 'YYYY') = #{year}
	      AND TO_CHAR(PAYMENT_DATE, 'MM') = #{month}
	    GROUP BY TO_CHAR(PAYMENT_DATE, 'DD')
	    ORDER BY DAY
	</select>
	
	<!-- Ï¥ù Í±∞Îûò Í∏àÏï° -->
	<select id="selectTotalAmount" resultType="int">
	    SELECT NVL(SUM(p.AMOUNT), 0)
	    FROM PAYMENTS p
	    INNER JOIN TOURS t ON p.TOUR_NO = t.TOUR_NO
	    WHERE p.PAYMENT_STATUS IN ('Í≤∞Ï†úÏôÑÎ£å', 'Í±∞ÎûòÏôÑÎ£å')
	</select>
	
	<!-- Ï†ÑÏùº Í±∞Îûò Í∏àÏï° -->
	<select id="selectYesterdayAmount" resultType="int">
	    SELECT NVL(SUM(p.AMOUNT), 0)
	    FROM PAYMENTS p
	    INNER JOIN TOURS t ON p.TOUR_NO = t.TOUR_NO
	    WHERE p.PAYMENT_STATUS IN ('Í≤∞Ï†úÏôÑÎ£å', 'Í±∞ÎûòÏôÑÎ£å')
	    AND TRUNC(p.PAYMENT_DATE) = TRUNC(SYSDATE - 1)
	</select>
	
	<!-- Ï¥ù Ïù¥Ïö© Ïù∏Ïõê -->
	<select id="selectTotalUsers" resultType="int">
	    SELECT NVL(SUM(p.NUM_PEOPLE), 0)
	    FROM PAYMENTS p
	    INNER JOIN TOURS t ON p.TOUR_NO = t.TOUR_NO
	    WHERE p.PAYMENT_STATUS IN ('Í≤∞Ï†úÏôÑÎ£å', 'Í±∞ÎûòÏôÑÎ£å', 'ÌôòÎ∂àÏöîÏ≤≠', 'ÌôòÎ∂àÏôÑÎ£å')
	</select>
	
	<!-- ÏäπÏù∏Îêú Í±¥Ïàò -->
	<select id="selectApprovedCount" resultType="int">
	    SELECT COUNT(*)
	    FROM PAYMENTS p
	    INNER JOIN TOURS t ON p.TOUR_NO = t.TOUR_NO
	    WHERE p.PAYMENT_STATUS IN ('Í≤∞Ï†úÏôÑÎ£å', 'Í±∞ÎûòÏôÑÎ£å')
	</select>
	
	<!-- Ï∑®ÏÜåÎêú Í±¥Ïàò -->
	<select id="selectRejectedCount" resultType="int">
	    SELECT COUNT(*)
	    FROM PAYMENTS p
	    INNER JOIN TOURS t ON p.TOUR_NO = t.TOUR_NO
	    WHERE p.PAYMENT_STATUS IN ('ÌôòÎ∂àÏöîÏ≤≠', 'ÌôòÎ∂àÏôÑÎ£å')
	</select>
	
	<select id="selectTransactionList" resultType="hashmap">
		SELECT * 
		FROM (
			SELECT ROWNUM AS RNUM, DATA.* 
			FROM (
				SELECT
					PAYMENT_NO,PAYMENT_DATE, AMOUNT,PAYMENT_STATUS, NUM_PEOPLE, ETC, 
        			p.USER_NO, USER_FIRSTNAME, USER_LASTNAME,
        			PHONE, EMAIL, ISFOREIGNER,
        			T.TOUR_NO, TOUR_DATE, DURATION, TITLE 
      			FROM PAYMENTS p
      			JOIN USERS u ON p.USER_NO = u.USER_NO
      			JOIN TOURS t ON p.TOUR_NO = t.TOUR_NO
      			WHERE 1 = 1
      			<if test="startDate != null and startDate != ''">
          			AND PAYMENT_DATE &gt;= TO_DATE(#{startDate}, 'YYYY-MM-DD')
      			</if>
      			<if test="endDate != null and endDate != ''">
          			AND PAYMENT_DATE &lt;= TO_DATE(#{endDate}, 'YYYY-MM-DD')
      			</if>
      			<if test="status != null and status != ''">
          			AND PAYMENT_STATUS = #{status}
      			</if>
      			<if test="keyword != null and keyword != ''">
          			AND (
              			USER_FIRSTNAME LIKE '%' || #{keyword} || '%'
              			OR TITLE LIKE '%' || #{keyword} || '%'
			      	)
					</if>
					ORDER BY PAYMENT_DATE DESC
			) DATA
			WHERE ROWNUM &lt;= #{page} * #{size}
		)
		WHERE RNUM &gt; (#{page} - 1) * #{size}
	</select> 


	<!--ÌéòÏù¥Ïßï Ï≤òÎ¶¨ -->
	<select id="selectTransactionTotalCount" resultType="int">
	  SELECT COUNT(*)
	  FROM PAYMENTS p
	  JOIN USERS u ON p.USER_NO = u.USER_NO
	  JOIN TOURS t ON p.TOUR_NO = t.TOUR_NO
	  WHERE 1 = 1
	  <if test="startDate != null and startDate != ''">
	    AND PAYMENT_DATE &gt;= TO_DATE(#{startDate}, 'YYYY-MM-DD')
	  </if>
	  <if test="endDate != null and endDate != ''">
	    AND PAYMENT_DATE &lt;= TO_DATE(#{endDate}, 'YYYY-MM-DD')
	  </if>
	  <if test="status != null and status != ''">
	    AND PAYMENT_STATUS = #{status}
	  </if>
	  <if test="keyword != null and keyword != ''">
	    AND (
	      USER_FIRSTNAME LIKE '%' || #{keyword} || '%'
	      OR TITLE LIKE '%' || #{keyword} || '%'
	    )
	  </if>
	</select>	
	
    <!-- Í∞ÄÏù¥Îìú Ï†ïÎ≥¥Ï°∞Ìöå -->
    <select id="selectguidesList" parameterType="map" resultType="com.example.kapture.mypage.model.Guide">
        SELECT * FROM (
			SELECT ROWNUM AS RNUM, DATA.* FROM (
		        SELECT *
		        FROM USERS U
		        INNER JOIN GUIDES G ON G.USER_NO = U.USER_NO
		        INNER JOIN GUIDE_IMG I ON G.GUIDE_NO = I.P_GUIDE_NO
				<if test="startDate != null and startDate != ''">
			    	AND U_CREATED_AT &gt;= TO_DATE(#{startDate}, 'YYYY-MM-DD')
			  	</if>
			  	<if test="endDate != null and endDate != ''">
			    	AND U_CREATED_AT &lt;= TO_DATE(#{endDate}, 'YYYY-MM-DD')
			  	</if>
			  	<if test="statusFilter == null or statusFilter == ''">
			    	AND (
						U.USER_NO LIKE '%' || #{keyword} || '%' 
				    	OR GUIDE_NO LIKE '%' || #{keyword} || '%' 
				    	OR USER_FIRSTNAME LIKE '%' || #{keyword} || '%'  
			    	)
			  	</if>
			  	<if test="statusFilter != null and statusFilter == 'userNo'">
					AND U.USER_NO LIKE '%' || #{keyword} || '%' 
				</if>
			  	<if test="statusFilter != null and statusFilter == 'guideNo'">
				    AND GUIDE_NO LIKE '%' || #{keyword} || '%' 
			  	</if>
			  	<if test="statusFilter != null and statusFilter == 'name'">
				    AND USER_FIRSTNAME LIKE '%' || #{keyword} || '%' 
			  	</if>
	  			ORDER BY U_CREATED_AT DESC
			) DATA
	    	WHERE ROWNUM &lt;= #{page} * #{size}
		)
		WHERE RNUM &gt; (#{page} - 1) * #{size}
    </select>
    <!--  Í∞ÄÏù¥ÎìúÎ¶¨Ïä§Ìä∏ Ï¥ù Ïù∏Ïõê  -->
    <select id="selectGuidesTotalCount" resultType="int">
    	SELECT COUNT(*)
	  	FROM USERS U
	  	INNER JOIN GUIDES G ON G.USER_NO = U.USER_NO
	  	INNER JOIN GUIDE_IMG I ON G.GUIDE_NO = I.P_GUIDE_NO
	  	WHERE 1 = 1
	  	<if test="startDate != null and startDate != ''">
	    	AND U_CREATED_AT &gt;= TO_DATE(#{startDate}, 'YYYY-MM-DD')
	  	</if>
	  	<if test="endDate != null and endDate != ''">
	    	AND U_CREATED_AT &lt;= TO_DATE(#{endDate}, 'YYYY-MM-DD')
	  	</if>
	  	<if test="statusFilter == null or statusFilter == ''">
	    	AND (
				U.USER_NO LIKE '%' || #{keyword} || '%' 
		    	OR GUIDE_NO LIKE '%' || #{keyword} || '%' 
		    	OR USER_FIRSTNAME LIKE '%' || #{keyword} || '%'  
	    	)
	  	</if>
	  	<if test="statusFilter != null and statusFilter == 'userNo'">
			AND U.USER_NO LIKE '%' || #{keyword} || '%' 
		</if>
	  	<if test="statusFilter != null and statusFilter == 'guideNo'">
		    AND GUIDE_NO LIKE '%' || #{keyword} || '%' 
	  	</if>
	  	<if test="statusFilter != null and statusFilter == 'name'">
		    AND USER_FIRSTNAME LIKE '%' || #{keyword} || '%' 
	  	</if>
	</select>
	
    <!-- Í∞ÄÏù¥ÎìúÍ¥ÄÎ¶¨ Í∞ÄÏù¥ÎìúÏ†ïÎ≥¥ ÏàòÏ†ï -->
	<update id="updateGuideInfo" parameterType="hashmap">
		UPDATE GUIDES
		SET 
		<if test="language != null">LANGUAGE = #{language},</if>
		<if test="experience != null">EXPERIENCE = #{experience},</if>
			G_UPDATED_AT = SYSDATE
		WHERE GUIDE_NO = #{guideNo}
	</update>
	
	<!-- Í∞ÄÏù¥ÎìúÍ¥ÄÎ¶¨ Ïú†Ï†ÄÏ†ïÎ≥¥ ÏàòÏ†ï -->
	<update id="updateUserInfo" parameterType="hashmap">
		UPDATE USERS
		SET USER_FIRSTNAME = #{userFirstName},
			EMAIL = #{email},
			<if test="gender != null">GENDER = #{gender},</if>
			<if test="password != null and password !=''">PASSWORD = #{password},</if>
			<if test="address != null">ADDRESS = #{address},</if>
			<if test="phone != null">PHONE = #{phone},</if>
			<if test="birthday != null">BIRTHDAY = #{birthday},</if>
			U_UPDATED_AT = SYSDATE
		WHERE USER_NO = #{userNo}
	</update>
	
	<!-- Í∞ÄÏù¥Îìú ÌîÑÎ°úÌïÑ ÏàòÏ†ï(Í∞ÄÏù¥ÎìúÎ≤àÌò∏ ÏàòÏ†ï) -->
	<update id="updateGuideImg" parameterType="hashmap">
		UPDATE GUIDE_IMG
		SET P_GUIDE_NO = #{guideNo}
		WHERE P_FILE_NO = #{pFileNo}
	</update>
	
	<!-- ÌîÑÎ°úÌïÑ Ïù¥ÎØ∏ÏßÄ Ï†ÄÏû•-->
	<insert id="insertGuideProfile" parameterType="hashmap" useGeneratedKeys="true" keyProperty="pFileNo" keyColumn="P_FILE_NO">
		INSERT INTO GUIDE_IMG
		VALUES (GUIDE_IMG_SEQ.NEXTVAL, 0, #{pFilePath}, #{pFileName}, #{pFileOrgName}, #{pFileSize}, #{pFileType}, #{pFileExtension}, SYSDATE)
	</insert>
	
	<!-- ÌîÑÎ°úÌïÑ ÏàòÏ†ï ÌõÑ Ïù¥Ï†Ñ ÌîÑÎ°úÌïÑ ÏÇ≠Ï†ú -->
	<delete id="deleteBeforeGuideImg" parameterType="hashmap">
		DELETE FROM GUIDE_IMG
		WHERE P_FILE_NO = (
	        SELECT MIN(P_FILE_NO)
	        FROM GUIDE_IMG
	        WHERE P_GUIDE_NO = #{guideNo}
	    )
	</delete>
	
	<!-- ÌöåÏõêÍ¥ÄÎ¶¨ Ïú†Ï†ÄÏ†ïÎ≥¥ Ï°∞Ìöå -->
	<select id="selectUsersList" parameterType="map" resultType="com.example.kapture.login.model.Login">
		SELECT * 
		FROM (
			SELECT ROWNUM AS RNUM, DATA.* 
			FROM (
				SELECT *
				FROM USERS
				WHERE 1 = 1
			  	<if test="startDate != null and startDate != ''">
			    	AND U_CREATED_AT &gt;= TO_DATE(#{startDate}, 'YYYY-MM-DD')
			  	</if>
			  	<if test="endDate != null and endDate != ''">
			    	AND U_CREATED_AT &lt;= TO_DATE(#{endDate}, 'YYYY-MM-DD')
			  	</if>
			  	<if test="statusFilter == null or statusFilter == ''">
			    	AND (
						USER_NO LIKE '%' || #{keyword} || '%' 
				    	OR EMAIL LIKE '%' || #{keyword} || '%' 
				    	OR USER_FIRSTNAME LIKE '%' || #{keyword} || '%' 
				    	OR USER_LASTNAME LIKE '%' || #{keyword} || '%'
				    	OR PHONE LIKE '%' || #{keyword} || '%'    
			    	)
			  	</if>
			  	<if test="statusFilter != null and statusFilter == 'userNo'">
					AND USER_NO LIKE '%' || #{keyword} || '%' 
				</if>
			  	<if test="statusFilter != null and statusFilter == 'email'">
				    AND EMAIL LIKE '%' || #{keyword} || '%' 
			  	</if>
			  	<if test="statusFilter != null and statusFilter == 'name'">
				    AND USER_FIRSTNAME LIKE '%' || #{keyword} || '%' 
				    	OR USER_LASTNAME LIKE '%' || #{keyword} || '%' 
			  	</if>
			  	<if test="statusFilter != null and statusFilter == 'phone'">
				    AND PHONE LIKE '%' || #{keyword} || '%' 
			  	</if>
	  			ORDER BY U_CREATED_AT DESC
	  		) DATA
	    	WHERE ROWNUM &lt;= #{page} * #{size}
		)
		WHERE RNUM &gt; (#{page} - 1) * #{size}
	</select>
	
	<!--  ÌöåÏõê Ï¥ù Ïù∏Ïõê  -->
    <select id="selectUsersTotalCount" resultType="int">
    	SELECT COUNT(*)
	  	FROM USERS
	  	WHERE 1 = 1
	  	<if test="startDate != null and startDate != ''">
	    	AND U_CREATED_AT &gt;= TO_DATE(#{startDate}, 'YYYY-MM-DD')
	  	</if>
	  	<if test="endDate != null and endDate != ''">
	    	AND U_CREATED_AT &lt;= TO_DATE(#{endDate}, 'YYYY-MM-DD')
	  	</if>
	  	<if test="statusFilter == null or statusFilter == ''">
	    	AND (
				USER_NO LIKE '%' || #{keyword} || '%' 
		    	OR EMAIL LIKE '%' || #{keyword} || '%' 
		    	OR USER_FIRSTNAME LIKE '%' || #{keyword} || '%' 
		    	OR USER_LASTNAME LIKE '%' || #{keyword} || '%'
		    	OR PHONE LIKE '%' || #{keyword} || '%'    
	    	)
	  	</if>
	  	<if test="statusFilter != null and statusFilter == 'userNo'">
			AND USER_NO LIKE '%' || #{keyword} || '%' 
		</if>
	  	<if test="statusFilter != null and statusFilter == 'email'">
		    AND EMAIL LIKE '%' || #{keyword} || '%' 
	  	</if>
	  	<if test="statusFilter != null and statusFilter == 'name'">
		    AND USER_FIRSTNAME LIKE '%' || #{keyword} || '%' 
		    	OR USER_LASTNAME LIKE '%' || #{keyword} || '%' 
	  	</if>
	  	<if test="statusFilter != null and statusFilter == 'phone'">
		    AND PHONE LIKE '%' || #{keyword} || '%' 
	  	</if>
	</select>
	
	<!-- ÌöåÏõêÍ¥ÄÎ¶¨ Ïú†Ï†ÄÏ†ïÎ≥¥ ÏàòÏ†ï -->
	<update id="updateUser" parameterType="map">
		UPDATE USERS
		SET EMAIL = #{email}, USER_FIRSTNAME = #{userFirstName},
			<if test="userLastName != null">USER_LASTNAME = #{userLastName},</if>
			<if test="password != null and password !=''">PASSWORD = #{password},</if>
			<if test="gender != null">GENDER = #{gender},</if>
			<if test="phone != null">PHONE = #{phone},</if>
			<if test="birthday != null">BIRTHDAY = #{birthday},</if>
			<if test="address != null">ADDRESS = #{address},</if>
			<if test="socialType != null">SOCIAL_TYPE = #{socialType},</if>
			ISFOREIGNER = #{isForeigner},
			ROLE = #{role},
			PUSHYN = #{pushYN},
			UNREGISTERYN = #{unregisterYN},
			U_UPDATED_AT = SYSDATE
		WHERE USER_NO = #{userNo}
	</update>
	
	<!-- ÌöåÏõêÍ¥ÄÎ¶¨ ÌöåÏõê ÌÉàÌá¥ Ï≤òÎ¶¨(ÏÇ≠Ï†ú), Í∞ÄÏù¥ÎìúÍ¥ÄÎ¶¨ ÏÇ≠Ï†ú -->
	<delete id="deleteUser" parameterType="hashmap">
		DELETE FROM USERS
		WHERE USER_NO = #{userNo}
	</delete>
	
	<!-- Ïó≠Ìï† ÏàòÏ†ïÏãú Í∞ÄÏù¥Îìú ÏÉùÏÑ± -->
	<insert id="insertGuide" parameterType="hashmap">
		INSERT INTO GUIDES (GUIDE_NO, USER_NO)
		VALUES (GUIDES_SEQ.NEXTVAL, #{userNo})
	</insert>
	
	<!-- Í∞ÄÏù¥ÎìúÍ¥ÄÎ¶¨ ÏÇ≠Ï†ú, Í≥†Í∞ùÍ¥ÄÎ¶¨ ÏÇ≠Ï†ú, Ïó≠Ìï† ÏàòÏ†ïÏãú Í∞ÄÏù¥Îìú ÏÇ≠Ï†ú -->
	<delete id="deleteGuide" parameterType="hashmap">
		DELETE FROM GUIDES
		WHERE USER_NO = #{userNo}
	</delete>
	
	<!-- Í≥†Í∞ùÍ¥ÄÎ¶¨ ÏÇ≠Ï†ú Í∞ÄÏù¥ÎìúÏù¥ÎØ∏ÏßÄ ÏÇ≠Ï†ú(Í∞ÄÏù¥Îìú Î≤àÌò∏ Ï°∞Ìöå) -->
	<select id="selectGuideNo" parameterType="hashmap" resultType="int">
		SELECT GUIDE_NO
		FROM GUIDES
		WHERE USER_NO = #{userNo}
	</select>
	
	<!-- Í∞ÄÏù¥ÎìúÍ¥ÄÎ¶¨ ÏÇ≠Ï†ú, Í≥†Í∞ùÍ¥ÄÎ¶¨ ÏÇ≠Ï†ú(ÌîÑÎ°úÌïÑ Ï°¥Ïû¨ Ïó¨Î∂Ä) -->
	<select id="selectPFilePath" parameterType="hashmap" resultType="String">
		SELECT P_FILE_PATH
		FROM GUIDE_IMG
		WHERE P_GUIDE_NO = #{guideNo}
	</select>
	
	<!-- Í∞ÄÏù¥ÎìúÍ¥ÄÎ¶¨ ÏÇ≠Ï†ú, Í≥†Í∞ùÍ¥ÄÎ¶¨ ÏÇ≠Ï†ú(Í∞ÄÏù¥Îìú Ïù¥ÎØ∏ÏßÄ ÏÇ≠Ï†ú) -->
	<delete id="deleteGuideImg" parameterType="hashmap">
		DELETE FROM GUIDE_IMG
		WHERE P_GUIDE_NO = #{guideNo}
	</delete>
	
	<!-- Í∞ÄÏù¥Îìú ÌîÑÎ°úÌïÑ Ï§ëÎ≥µ Í∞úÏàò Ï°∞Ìöå-->
	<select id="guideImgCount" parameterType="hashmap" resultType="int">
		SELECT COUNT(*)
		FROM GUIDE_IMG
		WHERE P_GUIDE_NO = #{guideNo}
	</select>
	
	<!-- Í≥†Í∞ù Î¨∏Ïùò Î¶¨Ïä§Ìä∏ Ï°∞Ìöå -->
	<select id="selectInquiriesList" parameterType="map" resultType="com.example.kapture.cs.model.Cs">
		SELECT * 
		FROM (
			SELECT ROWNUM AS RNUM, DATA.* 
			FROM (
				SELECT *
				FROM INQUIRIES I
				INNER JOIN USERS U ON I.USER_NO = U.USER_NO
				WHERE 1 = 1
			  	<if test="startDate != null and startDate != ''">
			    	AND INQ_CREATED_AT &gt;= TO_DATE(#{startDate}, 'YYYY-MM-DD')
			  	</if>
			  	<if test="endDate != null and endDate != ''">
			    	AND INQ_CREATED_AT &lt;= TO_DATE(#{endDate}, 'YYYY-MM-DD')
			  	</if>
			  	<if test="statusFilter == null or statusFilter == ''">
			    	AND (
						INQUIRY_NO LIKE '%' || #{keyword} || '%' 
				    	OR U.USER_NO LIKE '%' || #{keyword} || '%' 
				    	OR USER_FIRSTNAME LIKE '%' || #{keyword} || '%' 
				    	OR USER_LASTNAME LIKE '%' || #{keyword} || '%'  
				    	OR CATEGORY LIKE '%' || #{keyword} || '%' 
				    	OR QNA_TITLE LIKE '%' || #{keyword} || '%' 
				    	OR QNA_STATUS LIKE '%' || #{keyword} || '%'  
			    	)
			  	</if>
			  	<if test="statusFilter != null and statusFilter == 'inquiryNo'">
					AND INQUIRY_NO LIKE '%' || #{keyword} || '%' 
				</if>
				<if test="statusFilter != null and statusFilter == 'userNo'">
				    AND U.USER_NO LIKE '%' || #{keyword} || '%' 
			  	</if>
			  	<if test="statusFilter != null and statusFilter == 'name'">
				    AND USER_FIRSTNAME LIKE '%' || #{keyword} || '%' 
				    	OR USER_LASTNAME LIKE '%' || #{keyword} || '%'  
			  	</if>
			  	<if test="statusFilter != null and statusFilter == 'category'">
				    AND CATEGORY LIKE '%' || #{keyword} || '%' 
			  	</if>
			  	<if test="statusFilter != null and statusFilter == 'qnaTitle'">
				    AND QNA_TITLE LIKE '%' || #{keyword} || '%'
			  	</if>
			  	<if test="statusFilter != null and statusFilter == 'qnaStatus'">
				    AND QNA_STATUS LIKE '%' || #{keyword} || '%' 
			  	</if>
				ORDER BY INQ_CREATED_AT DESC
			) DATA
	    	WHERE ROWNUM &lt;= #{page} * #{size}
		)
		WHERE RNUM &gt; (#{page} - 1) * #{size}
	</select>
	
	<!-- Î¨∏ÏùòÏ°∞Ìöå Ï¥ù Í∞ØÏàò -->
	<select id="selectInquiriesTotalCount" resultType="int">
		SELECT COUNT(*)
		FROM INQUIRIES I
		INNER JOIN USERS U ON I.USER_NO = U.USER_NO
		WHERE 1 = 1
	  	<if test="startDate != null and startDate != ''">
	    	AND INQ_CREATED_AT &gt;= TO_DATE(#{startDate}, 'YYYY-MM-DD')
	  	</if>
	  	<if test="endDate != null and endDate != ''">
	    	AND INQ_CREATED_AT &lt;= TO_DATE(#{endDate}, 'YYYY-MM-DD')
	  	</if>
	  	<if test="statusFilter == null or statusFilter == ''">
	    	AND (
				INQUIRY_NO LIKE '%' || #{keyword} || '%' 
		    	OR U.USER_NO LIKE '%' || #{keyword} || '%' 
		    	OR USER_FIRSTNAME LIKE '%' || #{keyword} || '%' 
		    	OR USER_LASTNAME LIKE '%' || #{keyword} || '%'  
		    	OR CATEGORY LIKE '%' || #{keyword} || '%' 
		    	OR QNA_TITLE LIKE '%' || #{keyword} || '%' 
		    	OR QNA_STATUS LIKE '%' || #{keyword} || '%'  
	    	)
	  	</if>
	  	<if test="statusFilter != null and statusFilter == 'inquiryNo'">
			AND INQUIRY_NO LIKE '%' || #{keyword} || '%' 
		</if>
		<if test="statusFilter != null and statusFilter == 'userNo'">
		    AND U.USER_NO LIKE '%' || #{keyword} || '%' 
	  	</if>
	  	<if test="statusFilter != null and statusFilter == 'name'">
		    AND USER_FIRSTNAME LIKE '%' || #{keyword} || '%' 
		    	OR USER_LASTNAME LIKE '%' || #{keyword} || '%'  
	  	</if>
	  	<if test="statusFilter != null and statusFilter == 'category'">
		    AND CATEGORY LIKE '%' || #{keyword} || '%' 
	  	</if>
	  	<if test="statusFilter != null and statusFilter == 'qnaTitle'">
		    AND QNA_TITLE LIKE '%' || #{keyword} || '%'
	  	</if>
	  	<if test="statusFilter != null and statusFilter == 'qnaStatus'">
		    AND QNA_STATUS LIKE '%' || #{keyword} || '%' 
	  	</if>
	</select>
	
	<!-- Í≥†Í∞ù Î¨∏Ïùò ÎãµÎ≥Ä Ï†ÄÏû• -->
	<update id="updateInquiryAnswer" parameterType="map">
		UPDATE INQUIRIES
		SET ANSWER = #{answer}, QNA_STATUS = 'ÎãµÎ≥ÄÏôÑÎ£å'
		WHERE INQUIRY_NO = #{inquiryNo}
	</update>
	
	<!-- Í≥†Í∞ù Î¨∏Ïùò ÏÇ≠Ï†ú -->
	<delete id="deleteInquiry" parameterType="hashmap">
		DELETE FROM INQUIRIES
		WHERE INQUIRY_NO = #{inquiryNo}
	</delete>
	
	<!-- ÌôòÎ∂à Ï≤òÎ¶¨ -->
	<update id="updateRefunded" parameterType="hashmap">
		UPDATE PAYMENTS
		SET PAYMENT_STATUS = 'ÌôòÎ∂àÏôÑÎ£å'
		WHERE PAYMENT_NO = #{paymentNo}
	</update>
	
	<!-- Î¶¨Î∑∞ Î¶¨Ïä§Ìä∏ -->
  	<select id="selectReviewList" resultType="hashmap">
	    SELECT 
	        R.REVIEW_NO           AS reviewNo,
	        EMAIL                 AS email,
	        T.TOUR_NO             AS tourNo,
	        T.TITLE               AS title,
	        T.DURATION            AS duration,
	        U.USER_FIRSTNAME      AS userFirstName,
	        U.USER_LASTNAME       AS userLastName,
	        R."COMMENT"           AS content,
	        R.RATING              AS rating,
	        TO_CHAR(R.R_CREATED_AT, 'YYYY-MM-DD') AS createdAt
	    FROM REVIEWS R
	    LEFT JOIN TOURS T ON R.TOUR_NO = T.TOUR_NO
	    LEFT JOIN GUIDES G ON T.GUIDE_NO = G.GUIDE_NO
	    LEFT JOIN USERS U ON G.USER_NO = U.USER_NO
	    WHERE
	    	T.TITLE LIKE '%' || #{keyword} || '%' OR
        	R."COMMENT" LIKE '%' || #{keyword} || '%' OR
        	EMAIL LIKE '%' || #{keyword} || '%'
	    ORDER BY 
	    	<choose>
		    	<when test="sort == 'rating_desc'">R.RATING DESC</when>
	            <when test="sort == 'rating_asc'">R.RATING ASC</when>
	            <otherwise>R.R_CREATED_AT DESC</otherwise>
	    	</choose>
	    OFFSET #{offset} ROWS FETCH NEXT #{pageSize} ROWS ONLY
	</select>
	
	<!-- Î¶¨Î∑∞ Ï†ÑÏ≤¥ Ïàò -->
	<select id="selectReviewCount" resultType="int">
    	SELECT COUNT(*)
    	FROM REVIEWS R
    	LEFT JOIN TOURS T ON R.TOUR_NO = T.TOUR_NO
    	LEFT JOIN GUIDES G ON T.GUIDE_NO = G.GUIDE_NO
    	LEFT JOIN USERS U ON G.USER_NO = U.USER_NO
    	WHERE 
	        T.TITLE LIKE '%' || #{keyword} || '%'
	        OR R."COMMENT" LIKE '%' || #{keyword} || '%'
	        OR EMAIL LIKE '%' || #{keyword} || '%'
	</select>

	<!--Î¶¨Î∑∞ Î≤àÌò∏Î°ú Î¶¨Î∑∞ ÏÇ≠Ï†ú-->
	<delete id="deleteReview">
	    DELETE FROM REVIEWS 
	    WHERE REVIEW_NO = #{REVIEWNO}
	</delete>
	
	<!--Î¶¨Î∑∞ Í∞ØÏàò Î∞è ÌèâÍ∑† Î≥ÑÏ†ê Ï°∞Ìöå-->
	<select id="getReviewSummary" resultType="hashmap">
	    SELECT 
	        COUNT(*) AS totalCount,
	        ROUND(AVG(RATING), 1) AS avgRating
	    FROM REVIEWS
	</select>

	<!-- Ï£ºÎ¨∏ÏÉÅÏÑ∏ÎÇ¥Ïó≠ ÏàòÏ†ï -->
	<update id="updateOrderInfo" parameterType="hashmap">
		UPDATE PAYMENTS
		SET PAYMENT_STATUS = #{paymentStatus}
	    WHERE PAYMENT_NO = #{paymentNo}
	</update>
	
	<!-- Ï£ºÎ¨∏ÎÇ¥Ïó≠ ÏÇ≠Ï†ú -->
	<delete id="deleteOrder">
	    DELETE FROM PAYMENTS
	    WHERE PAYMENT_NO = #{paymentNo}
	</delete>
	
	<!--ÎÖÑÍ∞Ñ ÌåêÎß§ÎÇ¥Ïó≠ Ï°∞Ìöå-->
	<select id="selectSalesByYear" resultType="hashmap">
	    SELECT TO_CHAR(PAYMENT_DATE, 'YYYY') AS year,
	           SUM(AMOUNT) AS totalSales
	    FROM PAYMENTS
	    GROUP BY TO_CHAR(PAYMENT_DATE, 'YYYY')
	    ORDER BY year
	</select>

	<!--ÌÖåÎßàÎ≥Ñ ÏµúÍ∑º Í≤∞Ï†ú 5Í±¥ Ï°∞Ìöå-->
	<select id="selectThemeSummary" resultType="hashmap">
		  SELECT theme_name AS THEME, cnt AS COUNT
		  FROM (
		    SELECT 
		      H.THEME_NAME AS theme_name,
		      COUNT(*) AS cnt,
		      ROW_NUMBER() OVER (ORDER BY COUNT(*) DESC) AS rn
		    FROM TOURS T
		    INNER JOIN PAYMENTS P ON T.TOUR_NO = P.TOUR_NO
		    INNER JOIN THEME H ON T.THEME_NO = H.THEME_NO
		    GROUP BY H.THEME_NAME
		  )
		  WHERE rn &lt;= 5
		  ORDER BY COUNT DESC
	</select>

	<!--Ï¥ù Í≤∞Ï†ú Í±¥Ïàò Ï°∞Ìöå-->
	<select id="selectThemeTotalCount" resultType="int">
	  SELECT COUNT(*) 
	  FROM PAYMENTS
	</select>

	<!--ÏøºÎ¶¨ ÏàòÏ†ï ÌïÑÏöî-->
	<select id="selectLatestReviews" resultType="hashmap">
	  SELECT * 
	  FROM (
	    SELECT * 
	    FROM (
	      SELECT 
	        T.TITLE, 
	        T.DURATION, 
	        T.PRICE, 
	        T.MAX_PEOPLE, 
	        T.TOUR_DATE,
	        R."COMMENT", 
	        R.RATING,
	        R.R_CREATED_AT,
	        U.USER_FIRSTNAME AS USERFIRSTNAME,
	        U.USER_LASTNAME AS USERLASTNAME
	      FROM TOURS T
	      INNER JOIN REVIEWS R ON T.TOUR_NO = R.TOUR_NO
	      INNER JOIN USERS U ON R.USER_NO = U.USER_NO
	      ORDER BY R.R_CREATED_AT DESC
	    )
	    WHERE ROWNUM &lt;= 5
	  )
	</select>
	
	<!-- ÏÉÅÌíàÍ¥ÄÎ¶¨ Ï°∞Ìöå-->
	<select id="selectToursManagementList" parameterType="map" resultType="com.example.kapture.tours.model.Tours">
		SELECT * 
		FROM (
			SELECT ROWNUM AS RNUM, DATA.* 
			FROM (
				SELECT *
				FROM TOURS T
				INNER JOIN GUIDES G ON T.GUIDE_NO = G.GUIDE_NO
				INNER JOIN USERS U ON G.USER_NO = U.USER_NO
				INNER JOIN (SELECT DISTINCT SI_NO,SI_NAME FROM REGION) R ON T.SI_NO = R.SI_NO
				INNER JOIN THEME TH ON T.THEME_NO = TH.THEME_NO
				JOIN (SELECT * FROM IMG WHERE THUMBNAIL = 'Y') I ON T.TOUR_NO = I.TOUR_NO
				WHERE 1 = 1
				<if test="startDate != null and startDate != ''">
					AND TOUR_DATE &gt;= TO_DATE(#{startDate}, 'YYYY-MM-DD')
	  			</if>
	  			<if test="endDate != null and endDate != ''">
	    			AND TOUR_DATE &lt;= TO_DATE(#{endDate}, 'YYYY-MM-DD')
	  			</if>
	  			<if test="statusFilter == null or statusFilter == ''">
		    		AND (
						T.TOUR_NO LIKE '%' || #{keyword} || '%' 
	      				OR TITLE LIKE '%' || #{keyword} || '%' 
	      				OR SI_NAME LIKE '%' || #{keyword} || '%' 
	      				OR THEME_NAME LIKE '%' || #{keyword} || '%' 
	      				)
	  			</if>
		  		<if test="statusFilter != null and statusFilter == 'tourNo'">
				    AND T.TOUR_NO LIKE '%' || #{keyword} || '%'
	  			</if>
	  			<if test="statusFilter != null and statusFilter == 'title'">
		    		AND TITLE LIKE '%' || #{keyword} || '%'
	  			</if>
	  			<if test="statusFilter != null and statusFilter == 'siName'">
		    		AND SI_NAME LIKE '%' || #{keyword} || '%' 
	  			</if>
	  			<if test="statusFilter != null and statusFilter == 'themeName'">
		    		AND THEME_NAME LIKE '%' || #{keyword} || '%'  
	  			</if>
	  			ORDER BY TOUR_DATE DESC
			) DATA
	    	WHERE ROWNUM &lt;= #{page} * #{size}
		)
		WHERE RNUM &gt; (#{page} - 1) * #{size}
	</select>
	
	<!-- ÏÉÅÌíàÍ¥ÄÎ¶¨ Ï¥ù Í∞ØÏàò -->
	<select id="selectToursTotalCount" resultType="int">
		SELECT COUNT(*)
		FROM TOURS T
		JOIN GUIDES G ON T.GUIDE_NO = G.GUIDE_NO
		JOIN USERS U ON G.USER_NO = U.USER_NO
		JOIN (SELECT DISTINCT SI_NO,SI_NAME FROM REGION) R ON T.SI_NO = R.SI_NO
		JOIN THEME TH ON T.THEME_NO = TH.THEME_NO
		JOIN (SELECT * FROM IMG WHERE THUMBNAIL = 'Y') I ON T.TOUR_NO = I.TOUR_NO
		WHERE 1 = 1
		<if test="startDate != null and startDate != ''">
			AND TOUR_DATE &gt;= TO_DATE(#{startDate}, 'YYYY-MM-DD')
	  	</if>
	  	<if test="endDate != null and endDate != ''">
	    	AND TOUR_DATE &lt;= TO_DATE(#{endDate}, 'YYYY-MM-DD')
	  	</if>
	  	<if test="statusFilter == null or statusFilter == ''">
		    AND (
				T.TOUR_NO LIKE '%' || #{keyword} || '%' 
	      		OR TITLE LIKE '%' || #{keyword} || '%' 
	      		OR SI_NAME LIKE '%' || #{keyword} || '%' 
	      		OR THEME_NAME LIKE '%' || #{keyword} || '%' 
	      		)
	  	</if>
	  	<if test="statusFilter != null and statusFilter == 'tourNo'">
		    AND T.TOUR_NO LIKE '%' || #{keyword} || '%'
	  	</if>
	  	<if test="statusFilter != null and statusFilter == 'title'">
		    AND TITLE LIKE '%' || #{keyword} || '%'
	  	</if>
	  	<if test="statusFilter != null and statusFilter == 'siName'">
		    AND SI_NAME LIKE '%' || #{keyword} || '%' 
	  	</if>
	  	<if test="statusFilter != null and statusFilter == 'themeName'">
		    AND OR THEME_NAME LIKE '%' || #{keyword} || '%'  
	  	</if>
	</select>
	
	<!-- ÏÉÅÌíàÍ¥ÄÎ¶¨ ÏàòÏ†ï -->
	<update id="updateTour" parameterType="hashmap">
		UPDATE TOURS SET 
			TITLE = #{title}, 
			DURATION = #{duration},
			PRICE = #{price},
			TOUR_DATE = #{tourDate},
			SI_NO = (SELECT DISTINCT SI_NO FROM REGION WHERE SI_NAME=#{siName}),
			GU_NO = (SELECT DISTINCT GU_NO FROM REGION WHERE SI_NAME=#{siName} AND GU_NAME=#{guName}),
			THEME_NO = (SELECT THEME_NO FROM THEME WHERE THEME_NAME =#{themeName}), 
			DESCRIPTION = #{description}
		WHERE TOUR_NO = #{tourNo}
	</update>
	
	<!-- ÏÉÅÌíàÍ¥ÄÎ¶¨ ÏÇ≠Ï†ú -->
	<delete id="deleteTour">
	    DELETE FROM TOURS
	    WHERE TOUR_NO = #{tourNo}
	</delete>
	
	<!-- Í∞ÄÏù¥Îìú Ï∂îÍ∞Ä(Ïú†Ï†Ä Ï†ïÎ≥¥) -->
	<insert id="insertNewUser" parameterType="hashmap" useGeneratedKeys="true" keyProperty="userNo" keyColumn="USER_NO">
		INSERT INTO USERS
		VALUES (USERS_SEQ.NEXTVAL, #{password}, #{email}, #{phone}, 'GUIDE', #{birthday}, #{address}, #{gender}, SYSDATE, SYSDATE, #{userFirstName}, null, null, 'Y', 'N', 'N' )
	</insert>
	
	<!-- Í∞ÄÏù¥Îìú Ï∂îÍ∞Ä(Í∞ÄÏù¥Îìú Ï†ïÎ≥¥) -->
	<insert id="insertNewGuide" parameterType="hashmap" useGeneratedKeys="true" keyProperty="guideNo" keyColumn="GUIDE_NO">
		INSERT INTO GUIDES
		VALUES (GUIDES_SEQ.NEXTVAL, #{userNo}, #{language}, #{experience}, SYSDATE, SYSDATE)
	</insert>
		
	<!--ÏõîÎ≥Ñ Ï¥ù Í≤∞Ï†ú ÎÇ¥Ïó≠ Ï°∞Ìöå-->
	<select id="selectMonthlySales" resultType="map">
	    SELECT
	        TO_CHAR(PAYMENT_DATE, 'YYYY-MM') AS MONTH,
	        SUM(AMOUNT) AS TOTALSALES
	    FROM PAYMENTS
	    WHERE
	        PAYMENT_STATUS IN ('Í±∞ÎûòÏôÑÎ£å','Í≤∞Ï†úÏôÑÎ£å')
	        AND TO_CHAR(PAYMENT_DATE, 'YYYY') = TO_CHAR(SYSDATE, 'YYYY')
	    GROUP BY TO_CHAR(PAYMENT_DATE, 'YYYY-MM')
	    ORDER BY MONTH ASC
	</select>
		
	<!--ÏµúÍ∑º ÌåêÎß§ ÎÇ¥Ïó≠ Ï°∞Ìöå + Í∞ØÏàò Ï†úÌïú-->
	<select id="selectLatestSales" parameterType="map" resultType="map">
		SELECT * 
		FROM (
		    SELECT ROWNUM AS RNUM, DATA.*
		    FROM (
		        SELECT 
		            T.TITLE,
		            TO_CHAR(P.PAYMENT_DATE, 'YYYY-MM-DD') AS PAYMENT_DATE,
		            P.AMOUNT,
		            P.NUM_PEOPLE,
		            U.USER_FIRSTNAME AS GUIDE_FIRST_NAME,
		            U.USER_LASTNAME AS GUIDE_LAST_NAME,
		            I.FILE_PATH AS IMAGE_PATH
		        FROM PAYMENTS P
		        LEFT JOIN TOURS T ON P.TOUR_NO = T.TOUR_NO
		        LEFT JOIN USERS U ON T.GUIDE_NO = U.USER_NO
		        LEFT JOIN IMG I ON T.TOUR_NO = I.TOUR_NO AND I.THUMBNAIL = 'Y'
		        WHERE P.PAYMENT_STATUS = 'Í±∞ÎûòÏôÑÎ£å'
		        ORDER BY P.PAYMENT_DATE DESC
		    ) DATA
		    WHERE ROWNUM &lt;= #{offset} + #{limit}
		)
		WHERE RNUM &gt; #{offset}
	</select>
		
	<!-- ÏöîÏ≤≠Í≤åÏãúÌåê Í∏Ä Ï¥ù Í∞ØÏàò-->
	<select id="selectRequestCount" resultType="int">
    		SELECT COUNT(*) 
    		FROM REQUESTS 
    		WHERE STATUS != ''
	</select>

	<!--ÏµúÍ∑º ÏöîÏ≤≠Í≤åÏãúÍ∏Ä Ï°∞Ìöå + ÌéòÏù¥Ïßï -->
	<select id="selectLatestRequests" parameterType="map" resultType="map">
	    SELECT
	        R.REQUEST_NO,
	        R.TITLE,
	        R.STATUS,
	        TO_CHAR(R.RQ_CREATED_AT, 'YYYY-MM-DD') AS RQ_CREATED_AT,
	        U.USER_FIRSTNAME,
	        U.USER_LASTNAME
	    FROM REQUESTS R
	    JOIN USERS U ON R.USER_NO = U.USER_NO
	    ORDER BY R.RQ_CREATED_AT DESC
	    OFFSET #{offset} ROWS FETCH NEXT #{limit} ROWS ONLY
	</select>
	<!-- Ï†úÌú¥Î¨∏Ïùò Í¥ÄÎ¶¨(ÏäπÏù∏ÎåÄÍ∏∞, ÏäπÏù∏Í±∞Î∂Ä) Ï°∞Ìöå-->
	<select id="selectWaitingPartnershipList" parameterType="map" resultType="com.example.kapture.admin.model.Partnership">
		SELECT * FROM (
			SELECT ROWNUM AS RNUM, DATA.* FROM (
				SELECT *
				FROM PARTNERSHIP 
				WHERE PS_STATUS IN ('ÏäπÏù∏ÎåÄÍ∏∞', 'ÏäπÏù∏Í±∞Î∂Ä')
	  			ORDER BY PS_CREATED_AT DESC
			) DATA
	    	WHERE ROWNUM &lt;= #{waitingPage} * #{size}
		)
		WHERE RNUM &gt; (#{waitingPage} - 1) * #{size}
	</select>
	<!-- Ï†úÌú¥Î¨∏Ïùò Í¥ÄÎ¶¨(ÏäπÏù∏ÏôÑÎ£å) Ï°∞Ìöå-->
	<select id="selectApprovedPartnershipList" parameterType="map" resultType="com.example.kapture.admin.model.Partnership">
		SELECT * FROM (
			SELECT ROWNUM AS RNUM, DATA.* FROM (
				SELECT *
				FROM PARTNERSHIP 
				WHERE PS_STATUS = 'ÏäπÏù∏ÏôÑÎ£å'
	  			ORDER BY PS_CREATED_AT DESC
			) DATA
	    	WHERE ROWNUM &lt;= #{approvedPage} * #{size}
		)
		WHERE RNUM &gt; (#{approvedPage} - 1) * #{size}
	</select>
	<!-- Ï†úÌú¥Î¨∏Ïùò Í¥ÄÎ¶¨(ÏäπÏù∏ÎåÄÍ∏∞, ÏäπÏù∏Í±∞Î∂Ä) Ï¥ù Í∞úÏàò -->
	<select id="countWaitingPartnership" resultType="int">
		SELECT COUNT(*)
		FROM PARTNERSHIP		
		WHERE PS_STATUS IN ('ÏäπÏù∏ÎåÄÍ∏∞', 'ÏäπÏù∏Í±∞Î∂Ä')
	</select>
	<!-- Ï†úÌú¥Î¨∏Ïùò Í¥ÄÎ¶¨(ÏäπÏù∏ÏôÑÎ£å) Ï¥ù Í∞úÏàò -->
	<select id="countApprovedPartnership" resultType="int">
		SELECT COUNT(*)
		FROM PARTNERSHIP		
		WHERE PS_STATUS = 'ÏäπÏù∏ÏôÑÎ£å'
	</select>
	<!-- Ï†úÌú¥Î¨∏Ïùò Í¥ÄÎ¶¨ ÏàòÏ†ï -->
	<update id="updatePartnership" parameterType="hashmap">
		UPDATE PARTNERSHIP SET 
			PS_STATUS = #{psStatus, jdbcType=VARCHAR}, 
			PS_UPDATED_AT = SYSDATE
		WHERE PARTNERSHIP_NO = #{partnershipNo, jdbcType=NUMERIC}
	</update>
	<!-- Î¨∏Ïùò ÎãµÎ≥ÄÏãú ÏïåÎ¶º Ï†ïÎ≥¥ Ï†ÄÏû• -->
	<insert id="insertAnswerAlarm" parameterType="hashmap">
	    INSERT INTO ALARM (
	        ALARM_NO,
	        TARGET_USER_NO,
	        REFERENCE_TYPE,
	        REFERENCE_ID,
	        URL_PARAM,
	        ALARM_STATUS,
	        AL_CREATED_AT
	    ) VALUES (
	        ALARM_SEQ.NEXTVAL,
	        #{targetUserNo},
	        #{referenceType},
	        #{inquiryNo},
	        null,
	        'N',
	        SYSDATE
	    )
	</insert>
	<!-- Ï†úÌú¥ ÏÉÅÌÉú Î≥ÄÍ≤ΩÏãú ÏïåÎ¶º Ï†ïÎ≥¥ Ï†ÄÏû• -->
	<insert id="insertPartnershipStatusAlarm" parameterType="hashmap">
	    INSERT INTO ALARM (
	        ALARM_NO,
	        TARGET_USER_NO,
	        REFERENCE_TYPE,
	        REFERENCE_ID,
	        URL_PARAM,
	        ALARM_STATUS,
	        AL_CREATED_AT
	    ) VALUES (
	        ALARM_SEQ.NEXTVAL,
	        #{targetUserNo},
	        #{referenceType},
	        #{referenceId},
	        #{psStatus},
	        'N',
	        SYSDATE
	    )
	</insert>
</mapper>